apiVersion: apps/v1
kind: Deployment
metadata:
  name: sample-app-frontend
spec:
  selector:
    matchLabels:
      app: sample-app-frontend
  template:
    metadata:
      labels:
        app: sample-app-frontend
    spec:
      containers:
        - name: sample-app-frontend
          image: docker.io/library/sample-app-frontend:latest
          imagePullPolicy: Never
          resources:
            limits:
              memory: "128Mi"
              cpu: "500m"
          ports:
            - containerPort: 3000

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: sample-app-backend
spec:
  replicas: 3
  selector:
    matchLabels:
      app: sample-app-backend
  template:
    metadata:
      labels:
        app: sample-app-backend
    spec:
      containers:
        - name: sample-app-backend
          image: docker.io/library/sample-app-backend:latest
          imagePullPolicy: Never
          resources:
            limits:
              memory: "128Mi"
              cpu: "500m"
          volumeMounts:
            - mountPath: /data
              name: pvc
          ports:
            - containerPort: 8080
      volumes:
        - name: pvc
          persistentVolumeClaim:
            claimName: sample-app-backend-pv-claim

---

apiVersion: v1
kind: Service
metadata:
  name: sample-app-frontend-service
spec:
  selector:
    app: sample-app-frontend
  ports:
    - port: 80
      targetPort: 3000

---

apiVersion: v1
kind: Service
metadata:
  name: sample-app-backend-service
spec:
  selector:
    app: sample-app-backend
  ports:
    - port: 80
      targetPort: 8080

---

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: sample-app-ingress
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  rules:
    - http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: sample-app-frontend-service
                port:
                  number: 80
          - path: /api
            pathType: Prefix
            backend:
              service:
                name: sample-app-backend-service
                port:
                  number: 80

---

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: sample-app-backend-pv-claim
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 100M
