apiVersion: apps/v1
kind: Deployment
metadata:
  name: sample-app-backend
spec:
  replicas: 3
  selector:
    matchLabels:
      app: sample-app-backend
  template:
    metadata:
      labels:
        app: sample-app-backend
    spec:
      containers:
        - name: sample-app-backend
          image: docker.io/library/docker-kubernetes-sample-app-backend:latest
          imagePullPolicy: Never
          resources:
            limits:
              memory: "128Mi"
              cpu: "500m"
          volumeMounts:
            - mountPath: /data
              name: pvc
          ports:
            - containerPort: 8080
          env:
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: postgres-secret
                  key: postgres-root-username
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres-secret
                  key: postgres-root-password
            - name: POSTGRES_DATABASE
              valueFrom:
                configMapKeyRef:
                  name: postgres-configmap
                  key: postgres-dbname
            - name: POSTGRES_HOST
              value: postgres
      volumes:
        - name: pvc
          persistentVolumeClaim:
            claimName: sample-app-backend-pv-claim

---
apiVersion: v1
kind: Service
metadata:
  name: sample-app-backend-service
spec:
  selector:
    app: sample-app-backend
  ports:
    - port: 80
      targetPort: 8080

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: sample-app-backend-pv-claim
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 100M
